/*
 *     Orbit, a versatile image analysis software for biological image-based quantification.
 *     Copyright (C) 2009 - 2017  Idorsia Pharmaceuticals Ltd., Hegenheimermattweg 91, CH-4123 Allschwil, Switzerland.
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */



plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'application'
    id 'io.codearte.nexus-staging' version '0.21.2'
}

def group = 'com.actelion.research'
ext.versionDef = '1.7.3'
archivesBaseName = "image-provider-omero"
def archiveDescr = "Orbit Image Provider Omero"

if (file('custom.gradle').exists()) {
    apply from: 'custom.gradle'
}

application {
    mainClassName 'com.actelion.research.orbit.imageprovider.ImageProviderOmero'
}


tasks.withType(JavaCompile) {
    def javaVersion = JavaVersion.VERSION_11

    // enforce Java 11 as the source + target + compile time level
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    compileJava.doFirst {
        if (JavaVersion.current() != javaVersion)
            throw new IllegalStateException("Compiler version mismatch; required is "
                    + javaVersion + ", but using " + JavaVersion.current());
    }

    if (JavaVersion.current().isJava8Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://artifacts.openmicroscopy.org/artifactory/maven/'
    }
    maven {
        url 'https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/' // for jai-codec
    }

    maven {
        url 'https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/'    // just for thredds-parent-4.3.22 used by netcdf-4.3.22
    }
    maven {
        //url 'http://maven.imagej.net/content/repositories/snapshots/'
        url 'https://maven.scijava.org/content/repositories/snapshots/'
        // https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/repositories/RepositoryContentDescriptor.html
    }
    maven {
        url 'https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/'
    }

}


task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}
task docJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
}



publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = archivesBaseName
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = archiveDescr
                description = archiveDescr
                url = 'https://github.com/mstritt/image-provider-omero'
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'http://www.gnu.org/licenses/gpl-3.0.html'
                    }
                }
                developers {
                    [developer {
                        id = 'mstritt'
                        name = 'Manuel Stritt'
                        email = 'manuel.stritt@idorsia.com'
                    },
                     developer {
                         id = 'jfkotw'
                         name = 'Jonathan Fuller'
                         email = 'jonathan.fuller@idorsia.com'
                     }]
                }
                scm {
                    connection = 'scm:git:git://github.com/mstritt/image-provider-omero.git'
                    developerConnection = 'scm:git:ssh://github.com/mstritt/image-provider-omero.git'
                    url = 'https://github.com/mstritt/image-provider-omero'
                }
            }
        }

    }
}

signing {
    sign publishing.publications.mavenJava
}


dependencies {
    implementation 'com.actelion.research:lib-orbit-common:1.2.12'
    implementation 'ch.qos.logback:logback-classic:1.1.7'
    implementation 'com.sun.media:jai-codec:1.1.3'
    implementation 'javax.media:jai-core:1.1.3'
    implementation 'org.apache.commons:commons-math3:3.6.1'

    implementation(group: 'org.springframework.ldap', name: 'spring-ldap', version: '1.3.0.RELEASE', classifier: 'all'){
        exclude group: 'org.testng', module: 'testng'
    }

    implementation('edu.ucar:cdm:4.6.13') {
        exclude (group:'com.amazonaws', module: 'aws-java-sdk-core')
        exclude (group:'com.amazonaws', module: 'aws-java-sdk-s3')
        exclude (group:'com.amazonaws', module: 'aws-java-sdk-kms')
        because ('CDM imports really old aws libraries that cause issues with newer versions of AWS libraries')
    }
    implementation("org.openmicroscopy:omero-gateway:5.6.3") {
        // Conflicts with `net.java.dev.jna`
        exclude group: "com.sun.jna", module: "jna"
    }
    implementation("org.apache.httpcomponents:httpclient:4.5.7")
    implementation("org.apache.httpcomponents:httpcomponents-client:4.5.7")

    testImplementation 'junit:junit:4.13'

}

