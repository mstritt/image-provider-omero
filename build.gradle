/*
 *     Orbit, a versatile image analysis software for biological image-based quantification.
 *     Copyright (C) 2009 - 2017  Idorsia Pharmaceuticals Ltd., Hegenheimermattweg 91, CH-4123 Allschwil, Switzerland.
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

buildscript {
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

def group = 'com.actelion.research'
ext.versionDef = '1.7.0'

apply plugin: 'java'
apply plugin: 'maven-publish'
if (file('custom.gradle').exists()) {
    apply from: 'custom.gradle'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://artifacts.openmicroscopy.org/artifactory/maven/'
    }
    maven {
        name 'Unidata'
        url 'https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases'
    }
    maven {
        url 'http://artifacts.openmicroscopy.org/artifactory/maven/'
    }
    maven {
        url 'https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/' // for jai-codec
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}
task docJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(org.gradle.api.publish.maven.MavenPublication) {
            groupId group
            artifactId 'image-provider-omero'
            version versionDef
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
            artifact docJar {
                classifier "javadoc"
            }
            pom.withXml {
                asNode().appendNode('description', 'Orbit Image Provider Omero')
            }
        }
    }
}


dependencies {
    implementation 'com.actelion.research:lib-orbit-common:1.2.12'
    implementation 'ch.qos.logback:logback-classic:1.1.7'
    implementation 'com.sun.media:jai-codec:1.1.3'
    implementation 'javax.media:jai-core:1.1.3'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    testCompile 'junit:junit:[4.0,)'

    implementation (group: 'ome', name:'formats-gpl', version:'6.1.1')

    implementation (group: 'org.springframework.ldap', name: 'spring-ldap', version: '1.3.0.RELEASE', classifier: 'all'){
        exclude group: 'org.testng', module: 'testng'
    }
    implementation (group: 'org.openmicroscopy', name: 'omero-gateway', version: '5.6.3') {
        exclude group: 'org.springframework.ldap', module: 'spring-ldap'
        exclude group: 'org.testng', module: 'testng'
        exclude group: 'hsqldb', module: 'hsqldb'
    }


    implementation 'org.apache.httpcomponents:httpcomponents-client:4.5.6'


}

